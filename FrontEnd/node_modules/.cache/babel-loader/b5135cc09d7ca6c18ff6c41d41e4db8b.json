{"ast":null,"code":"var _jsxFileName = \"/home/nmenard/Asiakirjat/code_projects/Web projects/portfolio_website/src/components/contact.js\";\nimport React, { useState } from 'react';\nimport './contact.css';\n\nconst Contact = () => {\n  const nodemailer = require('nodemailer');\n\n  const [newName, setNewName] = useState('');\n  const [newEmailAddress, setEmailAddress] = useState('');\n  const [newMessage, setMessage] = useState('');\n\n  const onNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const onEmailChange = event => {\n    console.log(event.target.value);\n    setEmailAddress(event.target.value);\n  };\n\n  const onMessageChange = event => {\n    console.log(event.target.value);\n    setMessage(event.target.value);\n  };\n\n  const handleContact = (event, newName, newEmailAddress, newMessage) => {\n    console.log(\"in handle contact\");\n    event.preventDefault();\n    let transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: 'niklas.menard.us@gmail.com',\n        pass: '11spinblade'\n      }\n    });\n    let mailOptions = {\n      from: \"niklas.menard.us@gmail.com\",\n      // TODO: email sender\n      to: 'cba@gmail.com',\n      // TODO: email receiver\n      subject: 'Nodemailer - Test',\n      text: newMessage\n    };\n    transporter.sendMail(mailOptions, (err, data) => {\n      if (err) {\n        return console.log('Error occurs');\n      }\n\n      return console.log('Email sent!!!');\n    });\n    reset();\n  };\n\n  const reset = () => {\n    setNewName('');\n    setEmailAddress('');\n    setMessage('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-container\",\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"contact-form\",\n    onSubmit: handleContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: newName,\n    onChange: onNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    \"aria-describedby\": \"emailHelp\",\n    value: newEmailAddress,\n    onChange: onEmailChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    rows: \"5\",\n    value: newMessage,\n    onChange: onMessageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/home/nmenard/Asiakirjat/code_projects/Web projects/portfolio_website/src/components/contact.js"],"names":["React","useState","Contact","nodemailer","require","newName","setNewName","newEmailAddress","setEmailAddress","newMessage","setMessage","onNameChange","event","console","log","target","value","onEmailChange","onMessageChange","handleContact","preventDefault","transporter","createTransport","service","auth","user","pass","mailOptions","from","to","subject","text","sendMail","err","data","reset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './contact.css'\n\nconst Contact = () => {\n\n    const nodemailer = require('nodemailer')\n\n    const [newName, setNewName] = useState('')\n    const [newEmailAddress, setEmailAddress] = useState('')\n    const [newMessage, setMessage] = useState('')\n\n    const onNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const onEmailChange = (event) => {\n        console.log(event.target.value)\n        setEmailAddress(event.target.value)\n    }\n\n    const onMessageChange = (event) => {\n        console.log(event.target.value)\n        setMessage(event.target.value)\n    }\n\n    const handleContact = (event, newName, newEmailAddress, newMessage) => {\n\n        console.log(\"in handle contact\")\n        event.preventDefault();\n\n        let transporter = nodemailer.createTransport({\n            service: 'gmail',\n            auth: {\n                user: 'niklas.menard.us@gmail.com',\n                pass: '11spinblade'\n            }\n        });\n        \n        let mailOptions = {\n            from: \"niklas.menard.us@gmail.com\", // TODO: email sender\n            to: 'cba@gmail.com', // TODO: email receiver\n            subject: 'Nodemailer - Test',\n            text: newMessage\n        };\n\n        transporter.sendMail(mailOptions, (err, data) => {\n            if (err) {\n                return console.log('Error occurs');\n            }\n            return console.log('Email sent!!!');\n        });\n\n          reset()\n    }\n\n    const reset = () =>{\n        setNewName('')\n        setEmailAddress('')\n        setMessage('')\n    }\n\n    return (\n        <div className=\"contact-container\" method=\"POST\">\n            <form id=\"contact-form\" onSubmit={handleContact}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" className=\"form-control\" value={newName} onChange={onNameChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={newEmailAddress} onChange={onEmailChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"message\">Message</label>\n                    <textarea className=\"form-control\" rows=\"5\" value={newMessage} onChange={onMessageChange} />\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}