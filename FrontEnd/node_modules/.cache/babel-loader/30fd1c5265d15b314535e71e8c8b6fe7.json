{"ast":null,"code":"import _slicedToArray from\"/home/nmenard/Asiakirjat/code_projects/Web projects/portfolio_website/portfolio_dev/FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axios from'axios';import'./contact.css';var Contact=function Contact(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newName=_useState2[0],setNewName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newEmailAddress=_useState4[0],setEmailAddress=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newMessage=_useState6[0],setMessage=_useState6[1];var onNameChange=function onNameChange(event){console.log(event.target.value);setNewName(event.target.value);};var onEmailChange=function onEmailChange(event){console.log(event.target.value);setEmailAddress(event.target.value);};var onMessageChange=function onMessageChange(event){console.log(event.target.value);setMessage(event.target.value);};var handleContact=function handleContact(event){console.log(\"in handle contact\");event.preventDefault();var contactData={name:newName,email:newEmailAddress,message:newMessage};axios({method:\"POST\",url:\"http://localhost:3001/send\",data:contactData}).then(function(response){if(response.data.status==='success'){alert(\"Message Sent.\");reset();}else if(response.data.status==='fail'){alert(\"Message failed to send.\");reset();}});};var reset=function reset(){setNewName('');setEmailAddress('');setMessage('');};return/*#__PURE__*/React.createElement(\"div\",{className:\"contact-container\"},/*#__PURE__*/React.createElement(\"form\",{id:\"contact-form\",onSubmit:handleContact},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",value:newName,onChange:onNameChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"exampleInputEmail1\"},\"Email address\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",className:\"form-control\",\"aria-describedby\":\"emailHelp\",value:newEmailAddress,onChange:onEmailChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"message\"},\"Message\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",rows:\"5\",value:newMessage,onChange:onMessageChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Submit\"))));};export default Contact;","map":{"version":3,"sources":["/home/nmenard/Asiakirjat/code_projects/Web projects/portfolio_website/portfolio_dev/FrontEnd/src/components/contact.js"],"names":["React","useState","axios","Contact","newName","setNewName","newEmailAddress","setEmailAddress","newMessage","setMessage","onNameChange","event","console","log","target","value","onEmailChange","onMessageChange","handleContact","preventDefault","contactData","name","email","message","method","url","data","then","response","status","alert","reset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport './contact.css'\n\nconst Contact = () => {\n\n    const [newName, setNewName] = useState('')\n    const [newEmailAddress, setEmailAddress] = useState('')\n    const [newMessage, setMessage] = useState('')\n\n    const onNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const onEmailChange = (event) => {\n        console.log(event.target.value)\n        setEmailAddress(event.target.value)\n    }\n\n    const onMessageChange = (event) => {\n        console.log(event.target.value)\n        setMessage(event.target.value)\n    }\n\n    const handleContact = (event) => {\n        console.log(\"in handle contact\")\n        event.preventDefault();\n\n        const contactData = {name:newName, email:newEmailAddress, message:newMessage}\n\n        axios({\n            method: \"POST\", \n            url:\"http://localhost:3001/send\", \n            data:  contactData\n          }).then((response)=>{\n            if (response.data.status === 'success'){\n              alert(\"Message Sent.\"); \n            reset()\n            }else if(response.data.status === 'fail'){\n              alert(\"Message failed to send.\")\n            reset()\n            }\n          })\n    }\n\n    const reset = () =>{\n        setNewName('')\n        setEmailAddress('')\n        setMessage('')\n    }\n\n    return (\n        <div className=\"contact-container\">\n            <form id=\"contact-form\" onSubmit={handleContact}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" className=\"form-control\" value={newName} onChange={onNameChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={newEmailAddress} onChange={onEmailChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"message\">Message</label>\n                    <textarea className=\"form-control\" rows=\"5\" value={newMessage} onChange={onMessageChange} />\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}